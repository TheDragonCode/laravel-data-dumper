name: Tests

on: [ push, pull_request ]

jobs:
  
  sqlite:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: true
      matrix:
        php: [ "8.2", "8.3" ]
        laravel: [ "10.0", "11.0" ]
    
    name: PHP ${{ matrix.php }}, Laravel ${{ matrix.laravel }}, SQLite

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, pdo_mysql, pdo_pgsql
          coverage: xdebug

      - name: Install dependencies
        run: composer require laravel/framework:^${{ matrix.laravel }}

      - name: Execute tests
        run: composer test
  
#  mysql_57:
#    runs-on: ubuntu-22.04
#
#    services:
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: yes
#          MYSQL_DATABASE: laravel
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
#
#    strategy:
#      fail-fast: true
#
#    name: MySQL 5.7
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.2
#          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, :php-psr
#          tools: composer:v2
#          coverage: none
#
#      - name: Install dependencies
#        uses: nick-fields/retry@v3
#        with:
#          timeout_minutes: 5
#          max_attempts: 5
#          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress
#
#      - name: Execute tests
#        run: vendor/bin/phpunit tests/Integration/Database
#        env:
#          DB_CONNECTION: mysql
#          DB_COLLATION: utf8mb4_unicode_ci
#
#  mysql_8:
#    runs-on: ubuntu-22.04
#
#    services:
#      mysql:
#        image: mysql:8
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: yes
#          MYSQL_DATABASE: laravel
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
#
#    strategy:
#      fail-fast: true
#
#    name: MySQL 8.0
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.2
#          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, :php-psr
#          tools: composer:v2
#          coverage: none
#
#      - name: Install dependencies
#        uses: nick-fields/retry@v3
#        with:
#          timeout_minutes: 5
#          max_attempts: 5
#          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress
#
#      - name: Execute tests
#        run: vendor/bin/phpunit tests/Integration/Database
#        env:
#          DB_CONNECTION: mysql
#
  postgres:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [ "8.2", "8.3" ]
        laravel: [ "10.0", "11.0" ]
        psql: [ "12", "13", "14", "15", "16" ]

    name: PHP ${{ matrix.php }}, Laravel ${{ matrix.laravel }}, PostgreSQL ${{ matrix.psql }}

    services:
      postgres:
        image: postgres:${{ matrix.psql }}-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: default
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, pdo_mysql, pdo_pgsql
          coverage: xdebug

      - name: Install dependencies
        run: composer require laravel/framework:^${{ matrix.laravel }}

      - name: Execute tests
        run: composer test
        env:
          DB_CONNECTION: pgsql
          PGSQL_HOST: 127.0.0.1
